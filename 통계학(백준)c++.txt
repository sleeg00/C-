#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int a[500000], b[500000];
int list[1000000];
int sum = 0;
int compare(const void* first, const void* second)
{
	int* a = (int*)first;
	int* b = (int*)second;

	if (*a < *b)
		return -1;
	else if (*a > *b)
		return 1;
	else
		return 0;
}
int main()
{
	int n,cnt=0;
	int max = 0;
	scanf_s("%d", &n);
	for (int i = 0; i < n; i++)
		scanf_s("%d", &a[i]);
	qsort(a, n, sizeof(a[0]), compare);
	double hap = 0;
	for (int i = 0; i < n; i++)
		hap += a[i];


	for (int i = 0; i < n; i++)
	{
		list[(a[i] + 4000)]++;
		if (list[(a[i]+4000)] > max)
			max = list[(a[i]+4000)];
	}

	int k = 0;
	for (int i = 0 ;i < 8001; i++)
	{
		if (list[i] == 0)
			continue;
		if (list[i] == max)
		{
			if (cnt == 0)
			{
				k = i-4000;
				cnt++;
			}
			else if (cnt == 1)
			{
				k = i-4000;
				break;
			}
		}
	}
	sum=round(hap / n);
	printf("%0lf\n", (int)sum);
	printf("%d\n", a[(n+1)/2-1]);
	printf("%d\n", k);
	printf("%d\n", a[n - 1] - a[0]);
	return 0;
}